rootProject.name = 'ms-common'

enableFeaturePreview('VERSION_CATALOGS')

include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-core'
include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-core:ms-common-ext-spring-core-oauth2'
include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-core:ms-common-ext-spring-core-openapi'

include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-datetime'

include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-reactive:ms-common-ext-spring-reactive-context'
include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-reactive:ms-common-ext-spring-reactive-error'
include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-reactive:ms-common-ext-spring-reactive-filter'
include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-reactive:ms-common-ext-spring-reactive-oauth2'
include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-reactive:ms-common-ext-spring-reactive-security'

include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-web'
include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-web:ms-common-ext-spring-web-exception'
include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-web:ms-common-ext-spring-web-interceptor'
include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-web:ms-common-ext-spring-web-oauth2'
include 'ms-common-ext:ms-common-ext-spring:ms-common-ext-spring-web:ms-common-ext-spring-web-security'

include 'ms-common-bom'
include 'ms-common-schema-definition'
include 'ms-common-test'

dependencyResolutionManagement {
    versionCatalogs {
        externalLibs {
            version('micrometer.prometheus', '1.6.5')
            version('jackson.datatype', '2.12.3')
            version('logstash.encoder', '6.6')
            version('spotbugs.annotations', '4.2.2')
            version('springdoc', '1.5.7')
            version('swagger', '2.1.7')

            alias('jackson.datatype.jsr310').to('com.fasterxml.jackson.datatype', 'jackson-datatype-jsr310').versionRef('jackson.datatype')
            alias('logstash.logback.encoder').to('net.logstash.logback', 'logstash-logback-encoder').versionRef('logstash.encoder')
            alias('micrometer.registry.prometheus').to('io.micrometer', 'micrometer-registry-prometheus').versionRef('micrometer.prometheus')
            alias('spotbugs.annotations').to('com.github.spotbugs', 'spotbugs-annotations').versionRef('spotbugs.annotations')
            alias('springdoc.openapi.ui').to('org.springdoc', 'springdoc-openapi-ui').versionRef('springdoc')
            alias('springdoc.openapi.security').to('org.springdoc', 'springdoc-openapi-security').versionRef('springdoc')
            alias('springdoc.openapi.webflux.ui').to('org.springdoc', 'springdoc-openapi-webflux-ui').versionRef('springdoc')
            alias('swagger.core').to('io.swagger.core.v3', 'swagger-core').versionRef('swagger')
        }

        testLibs {
            version('beantester', '1.0.0')
            version('okhttp', '4.9.1')
            version('testcontainers', '1.15.2')

            alias('beantester').to('org.force66', 'BeanTester').versionRef('beantester')
            alias('squareup.mockwebserver').to('com.squareup.okhttp3', 'mockwebserver').versionRef('okhttp')
            alias('squareup.okhttp').to('com.squareup.okhttp3', 'okhttp').versionRef('okhttp')
            alias('testcontainers.core').to('org.testcontainers', 'testcontainers').versionRef('testcontainers')
            alias('testcontainers.junit.jupiter').to('org.testcontainers', 'junit-jupiter').versionRef('testcontainers')
            alias('testcontainers.postgresql').to('org.testcontainers', 'postgresql').versionRef('testcontainers')
        }

        platformLibs {
            version('spring.boot', '2.4.4')
            version('spring.cloud', '2020.0.2')

            alias('spring.boot.dependencies').to('org.springframework.boot', 'spring-boot-dependencies').versionRef('spring.boot')
            alias('spring.cloud.dependencies').to('org.springframework.cloud', 'spring-cloud-dependencies').versionRef('spring.cloud')
        }
    }
}

