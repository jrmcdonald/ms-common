plugins {
    id 'java-platform'
    id 'maven-publish'
}

javaPlatform {
    allowDependencies()
}

dependencies {
    constraints {
        rootProject.allprojects {
            if (!path.startsWith(":ms-common-bom")) {
                plugins.withId("maven-publish") {
                    afterEvaluate {
                        api "${group}:${name}:${version}"
                    }
                }
            }
        }

        api "com.github.spotbugs:spotbugs-annotations:${spotbugsAnnotationsVersion}"
        api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonDatatypeVersion}"
        api "com.squareup.okhttp3:okhttp:${okhttpVersion}"
        api "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
        api "io.micrometer:micrometer-registry-prometheus:${micrometerPrometheusVersion}"
        api "io.swagger.core.v3:swagger-core:${swaggerVersion}"
        api "net.logstash.logback:logstash-logback-encoder:${logstashEncoderVersion}"
        api "org.force66:BeanTester:${beanTesterVersion}"
        api "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
        api "org.springdoc:springdoc-openapi-security:${springdocVersion}"
        api "org.springdoc:springdoc-openapi-webflux-ui:${springdocVersion}"
        api "org.testcontainers:junit-jupiter:${testcontainersVersion}"
        api "org.testcontainers:postgresql:${testcontainersVersion}"
        api "org.testcontainers:testcontainers:${testcontainersVersion}"
    }

    api platform("org.springframework.boot:spring-boot-dependencies:${springBootPluginVersion}")
    api platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/jrmcdonald/ms-common")
            credentials {
                username = "jrmcdonald"
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.javaPlatform)
        }
    }
}